name: Build and Publish Images
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

env:
  OWNER_NAME: ${{ github.repository_owner }}
  CONTROLLER: ${{ github.event.repository.name }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Setup Terraform
        run: |
          export TF_VERSION=1.3.9
          wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
          unzip -q terraform_${TF_VERSION}_linux_amd64.zip
          mv terraform $(which terraform)
          terraform --version
      - name: Set up yq
        uses: frenck/action-setup-yq@v1
        with:
          version: 4.14.1
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.1
      - name: Prepare
        id: prep
        run: |
          BRANCH=$(sed 's/\//-/g' <<< ${{ steps.branch-name.outputs.current_branch }})
          VERSION="${BRANCH}-${GITHUB_SHA::8}"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish multi-arch tf-controller container image
        uses: docker/build-push-action@v4
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64 # ,linux/arm64 #,linux/arm/v7
          tags: |
            ghcr.io/${{ env.OWNER_NAME }}/${{ env.CONTROLLER }}:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
      - name: Build multi-arch tf-runner base image
        uses: docker/build-push-action@v4
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./runner-base.Dockerfile
          platforms: linux/amd64 # ,linux/arm64 #,linux/arm/v7
          tags: |
            ghcr.io/${{ env.OWNER_NAME }}/tf-runner:${{ steps.prep.outputs.VERSION }}-base
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
      - name: Publish multi-arch tf-runner container image
        uses: docker/build-push-action@v4
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./runner.Dockerfile
          platforms: linux/amd64 #,linux/arm64 #,linux/arm/v7
          build-args: |
            BASE_IMAGE=ghcr.io/${{ env.OWNER_NAME }}/tf-runner:${{ steps.prep.outputs.VERSION }}-base
          tags: |
            ghcr.io/${{ env.OWNER_NAME }}/tf-runner:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
      - name: Publish multi-arch branch-planner container image
        uses: docker/build-push-action@v4
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./planner.Dockerfile
          platforms: linux/amd64 # ,linux/arm64 #,linux/arm/v7
          tags: |
            ghcr.io/${{ env.OWNER_NAME }}/branch-planner:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
